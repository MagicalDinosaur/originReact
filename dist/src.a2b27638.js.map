{"version":3,"sources":["react.js","src/index.js"],"names":["React","createElement","render","vnode","container","innerHTML","tag","attrs","children","appendChild","_render","undefined","Date","String","textNode","document","createTextNode","component","createComponent","setComponentProps","base","dom","Object","keys","forEach","key","value","setAttribute","child","name","test","toLowerCase","style","cssText","removeAttribute","ReactComponent","props","state","newData","assign","renderComponent","inst","prototype","constructor","componentWillMount","componentWillReceiveProps","renderer","componentWillUpdate","componentDidUpdate","componentDidMount","parentNode","replaceChild","_component","Welcome","trick","element","getElementById"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["/**\n * from:https://github.com/hujiulong/simple-react/blob/chapter-1/src/index.js\n */\nconst React = {\n    createElement,\n    render: (vnode, container) => {\n        // 为了每次执行时清空\n        container.innerHTML = '';\n        return render(vnode, container);\n    }\n};\n\n/**\n * React.createElement()\n * transform-react-jsx 是 jsx 转换成 js 的babel 插件\n * 他有一个 pramgma 项，来定义转换 jsx 的方法名称\n * 这里我定义这个函数为 createElement\n */\nfunction createElement(tag, attrs, ...children) {\n    return {\n        tag,\n        attrs,\n        children\n    }\n};\n\n/**\n * React.render()\n * render方法的作用是将虚拟DOM渲染成真实的DOM\n */\nfunction render(vnode, container) {\n    return container.appendChild(_render(vnode));\n}\nfunction _render(vnode) {\n    if (vnode === undefined || vnode === null || typeof vnode === 'boolean') vnode = '';\n    if (typeof vnode === 'number' || vnode instanceof Date) vnode = String(vnode);\n    // 如果是纯文本\n    if (typeof vnode === 'string') {\n        let textNode = document.createTextNode(vnode);\n        return textNode;\n    }\n    // 如果 vnode 是组件时的处理,组件的tag是一个构造函数\n    if (typeof vnode.tag === 'function') {\n        const component = createComponent(vnode.tag, vnode.attrs);\n        setComponentProps(component, vnode.attrs);\n        return component.base;\n    }\n    const dom = document.createElement(vnode.tag);\n    // 挂载属性\n    if (vnode.attrs) {\n        Object.keys(vnode.attrs).forEach(key => {\n            const value = vnode.attrs[key];\n            setAttribute(dom, key, value);\n        });\n    }\n    // 递归子元素\n    vnode.children && vnode.children.forEach(child => render(child, dom));    // 递归渲染子节点\n    return dom;\n}\n\n/**\n * 给dom渲染属性\n */\nfunction setAttribute(dom, name, value) {\n    // className => class\n    if (name === 'className') name = 'class'\n\n    // 事件 onXXX\n    if (/on\\w+/.test(name)) {\n        name = name.toLowerCase();\n        dom[name] = value || '';\n    }\n    // style \n    else if (name === 'style') {\n        if (!value || typeof value === 'string') {\n            dom.style.cssText = value || '';\n        } else if (value && typeof value === 'object') {\n            for (let name in value) {\n                // 可以通过style={ width: 20 }这种形式来设置样式，可以省略掉单位px\n                dom.style[name] = typeof value[name] === 'number' ? value[name] + 'px' : value[name];\n            }\n        }\n    }\n    // 其他\n    else {\n        if (name in dom) {\n            dom[name] = value || '';\n        }\n\n        if (value) {\n            dom.setAttribute(name, value);\n        } else {\n            dom.removeAttribute(name);\n        }\n    }\n}\n\n/**\n * React.Component\n * 组件的 Component 类\n */\nexport class ReactComponent {\n    constructor(props = {}) {\n        // 初始化 state 和 props\n        this.state = {};\n        this.props = props;\n    }\n    // setState 触发视图渲染\n    setState(newData) {\n        Object.assign(this.state, newData)\n        renderComponent(this);\n    }\n}\n\nfunction createComponent(component, props) {\n    let inst;\n    // 如果是类定义组件，则直接返回实例,否则 new 一个组件实例\n    if (component.prototype && component.prototype.render) {\n        inst = new component(props);\n        // 如果是函数定义组件，则将其扩展为类定义组件\n    } else {\n        inst = new ReactComponent(props);\n        inst.constructor = component;\n        inst.render = function () {\n            return this.constructor(props);\n        }\n    }\n    return inst;\n}\n\n/**\n * 用来更新 props\n * 生命周期：componentWillMount、componentWillReceiveProps\n */\nfunction setComponentProps(component, props) {\n    if (!component.base) {\n        if (component.componentWillMount) component.componentWillMount();\n    } else if (component.componentWillReceiveProps) {\n        component.componentWillReceiveProps(props);\n    }\n    // component.props = props;\n    renderComponent(component);\n}\n\n/**\n * 渲染组件\n * 先 render() 拿到vnode 再 _render() 拿到 dom\n * 生命周期：componentWillUpdate，componentDidUpdate，componentDidMount\n */\nfunction renderComponent(component) {\n    let base;\n    const renderer = component.render(); // 拿到 vnode\n    if (component.base && component.componentWillUpdate) {\n        component.componentWillUpdate();\n    }\n    base = _render(renderer); // 拿到 dom 对象\n    if (component.base) {\n        if (component.componentDidUpdate) component.componentDidUpdate();\n    } else if (component.componentDidMount) {\n        component.componentDidMount();\n    }\n    if (component.base && component.base.parentNode) {\n        component.base.parentNode.replaceChild(base, component.base);\n    }\n    component.base = base;// 保存组件的 dom 对象\n    base._component = component;// dom 对象对应的组件\n}\n\nexport default React","import React, { ReactComponent } from '../react'\n\nclass Welcome extends ReactComponent {\n    render() {\n        return <h4>Hello, {this.props.name}</h4>;\n    }\n}\n\nfunction trick() {\n    const element = (\n        <div>\n            <Welcome name=\"666\"></Welcome>\n            <h1 className=\"title\" data-item=\"1\">Hello World!</h1>\n            <h6 style=\"color:red;\">{new Date()}</h6>\n        </div>\n    )\n    React.render(element, document.getElementById('root'))\n}\n\n// setInterval(trick, 1000);\ntrick()\n\n"]}