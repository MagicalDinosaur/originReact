{"version":3,"sources":["src/react-dom/dom.js","src/react-dom/diff.js","src/react/component.js","src/react/create-element.js","src/react/index.js","src/react-dom/render.js","src/react-dom/index.js","src/index.js"],"names":["setAttribute","dom","name","value","test","toLowerCase","style","cssText","removeAttribute","diff","vnode","container","ret","diffNode","parentNode","appendChild","newDom","undefined","String","nodeType","textContent","document","createTextNode","replaceChild","tag","diffComponent","isSameNodeType","createElement","childNodes","map","children","length","diffChildren","diffAttributes","vchildren","domChildren","keyed","i","child","key","push","min","childrenLen","vchild","j","c","f","nextSibling","removeNode","insertBefore","_component","oldDom","constructor","setComponentProps","attrs","base","unmountComponent","createComponent","oldAttrs","newAttrs","attributes","attr","component","props","componentWillMount","componentWillReceiveProps","renderComponent","renderer","render","componentWillUpdate","componentDidUpdate","componentDidMount","inst","prototype","ReactComponent","nodeName","componentWillUnmount","removeChild","Component","state","newData","Object","assign","_render","Date","textNode","_container","keys","forEach","console","log","App","num","setState","React","ReactDOM","getElementById"],"mappings":";;AOAA;;AACA;;;ADDA,ADCA,AHDA,ACAA,ACCA;;AJDA,AKGA,ADDA;;AHDA,AECA,eGAe;ANCR,AMAHoE,EAAAA,MAAM,CNAMpE,CMAZoE,WNAG,CAAsBnE,GAAtB,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAwC;AAC3C,AMFW,eFEA;AJCX,AIAA2E,EAAAA,IJAI5E,IAAI,CIAC,EAAT4E,EJAa,WAAb,EAA0B5E,GIDf,CJCmB,GAAG,OAAP,CAFiB,CAI3C;AENJ,AEKIyB,EAAAA,aAAa,EAAbA;AJEA,AIJW,MJIP,QAAQvB,IAAR,CAAaF,IAAb,CAAJ,EAAwB;AACpBA,AGDR,IHCQA,IAAI,CGDHyB,EHCMzB,IAAI,CAACG,MGDpB,CAAuBmB,GAAvB,CHCe,CGDsC,CHC7C;AACAvB,AGF6C,IHE7CA,EGFoBqD,CHEjB,CAACpD,GGFyC,CHE1C,CAAH,GAAYC,KAAK,IAAI,EAArB,uDGF4B,EAAiB;AHGhD,GAHD,CAIA,AEPS2E;AFGT,AGAiD,OHK5C,IAAI5E,IAAI,KAAK,OAAb,EAAsB,OGLY4B,QAAU;AFLrD,ADWQ,AGNmCA,IAAAA,MHM/B,CAAC3B,CGNwC,IHMzC,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EAAyC;AACrCF,AETR,ACEiD,QHOzCA,GAAG,CAACK,KAAJ,CAAUC,KETM,EFShB,GAAoBJ,KAAK,IAAI,EAA7B;AACH,AEVmB,OFQpB,CERQ4D,KFUD,AEVa,IFUT5D,KAAK,IAAI,QAAOA,KAAP,MAAiB,QAA9B,EAAwC,6BEV/B,EAAI;AFWhB,AGRR,SAAO,IHQM,IAAID,KAAT,IAAiBC,KAAjB,EAAwB;AACpB,AEZY,ACIpBqB,IAAAA,GAAG,EAAHA,GADG;AHUKvB,AGRRqD,IITFqC,AJSErC,KAAK,CHQGrD,CGRRqD,EHQW,CAAChD,EGVT,GHUK,CAAUJ,KAAV,IAAkB,OAAOC,KAAK,CAACD,KAAD,CAAZ,KAAuB,QAAvB,GAAkCC,KAAK,CAACD,KAAD,CAAL,GAAc,IAAhD,GAAuDC,KAAK,CAACD,KAAD,CAA9E;ACVT,ADWM,AEbL,ACKA4B,IAAAA,KFHQrB,GEGA,CFHT,CAAcR,AEGb6B,GFHD,EAAmBpB,GEAf,CAIH,CFJD,EAA0BC,SAA1B,EAAqC;AACxC,ADWK,AEbD,MDEEC,GAAG,ACFAmE,GDEGlE,ECFR,GAAa,EAAb,CDEgB,CAACZ,GAAD,EAAMS,KAAN,CAApB;ADYC,AEbG,ACAG,GAAP,EHIK,CAUL,GEdSqD,KAAL,GAAaA,KAAb;ADEJ,ADEK,AEHJ,ACKJ,IDJG,EDAIpD,GDaC,MCbQ,IAAIC,GAAG,CAACE,UAAJ,KAAmBH,SAApC,EAA+C;AMR/C,ANSIA,ADaA,ICbAA,QDaIT,CCbK,CAACa,EDaF,COtBE,GPsBEd,GAAZ,ECbA,ADaiB,CCbKW,GAAtB;AMTU,ANUb,ADaOX,AGXX,UHWWA,GAAG,CAACC,IAAD,CAAH,GAAYC,KAAK,IAAI,EAArB;AACH,AKAT,SAASgF,MFVMxD,CEUf,CAAiBjB,KAAjB,EAAwB;AExBN,ANWd,AIcA,MAAIA,GJdGE,EIcE,CJdT,IIccK,SAAV,IAAuBP,KAAK,KAAK,IAAjC,IAAyC,OAAOA,KAAP,KAAiB,SAA9D,EAAyEA,KAAK,GAAG,EAAR;AJb5E,ADaO,AKCJ,MAAI,MLDIP,CKCGO,ILDP,CKCA,CLDW,IKCM,MHjBZsE,EGiBL,IAA6BtE,GHjBf,EGiBoB,YAAY0E,IAAlD,EAAwD1E,KAAK,GAAGQ,MAAM,CAACR,KAAD,CAAd,CAFpC,CAGpB;AE1BI,ANaR,ADYYT,AEhBJgF,MAAAA,IFgBIhF,EEhBE,CFgBC,AEhBAiF,CFgBClF,KEhBR,CAAc,KAAK+E,CFgBf,CAAiB7E,GEhBrB,CFgBI,CEhBsB8E,CFgBC7E,KAAvB,CEhBJ;AKRA,APyBC,AKCL,AHjBI,MGiBA,GLHA,COvBK4E,GF0BErE,EE1BP,APyBO,GOzBM,AF0Bb,KAAiB,QAArB,EAA+B,AHjBX,IAAhB;AKRIkF,APyBA3F,AKCJ,AHjBH,MKTO2F,EF0BAP,CE1BG,CPyBHpF,COzBK,EPyBF,CAACO,EKCI,GAAGa,QAAQ,CAACC,CLDpB,CAAoBpB,IAApB,QKCW,CAAwBQ,KAAxB,CAAf;AE3Ba,AP2BZ,AKCD,KE5BA,MF4BOC,SAAS,CAACI,WAAV,CAAsBsE,QAAtB,CAAP;AE9BU,AP8Bb,AKCA,GAPmB,CAQpB;AE3BC,AP0BJ;;AKEG,MAAI,OAAO3E,KAAK,CAACc,GAAb,KAAqB,UAAzB,EAAqC;AJblC,AIcC,SJdQX,QAAT,CAAkBZ,GAAlB,EAAuBS,KAAvB,EAA8B;AACjC,AIcI,MJdAM,MAAM,GAAGf,ACNF6E,GDMX,sBMfoB;AAChBW,ANeJ,AIcI,ME7BAA,ANeA/E,KAAK,EMfE,CAACgF,ENeEzE,CMfV,CAAY,KAAZ,ENeA,IAAuBP,KAAK,KAAK,IAAjC,IAAyC,OAAOA,KAAP,KAAiB,SAA9D,EAAyEA,KAAK,GAAG,EAAR;AACzE,AIcI,MJdA,EIcMoD,KJdCpD,IIcQ,CJdf,EIckBA,GJdD,EIcjB,MJdJ,EAA+BA,KAAK,GAAGQ,MAAM,CAACR,KAAD,CAAd,CAHE,CAKjC;AMjBI,WAAK,IAAI2B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,ANiBR,AIYI,MJZA,EIYIyB,KE7BK+B,ANiBFnF,IIYM,CJZb,AIYc4E,GE7BV,CAAc,CNiBD,KIYjB,EAA0B,CJZ9B,EAA+B;AMjBPM,ANkBpB,AIYI,UE9BgBA,AF8BZ9B,GE9Be,EAAE,IF8BR,CE9BaiB,AF8BZV,KE9BO,CAAWuB,GAAX,GAAiB,OF8BtC,EAAmC;AE9BrB,ANmBlB,AIYQ9B,QJZJ7D,AIYI6D,CE/BJ,ENmBG,IAAI7D,EIYM,CJZH,AIYIoE,CJZHlD,QAAJ,KAAiB,CAA5B,EAA+B,EIYvB;AE9BJsE,ANmBA,AIYC,QE/BDA,ENmBIxF,GAAG,CAACmB,CMnBD,CAACsE,GAAR,CAAY,KAAKX,ANmBb,KMnBQ,ANmBYrE,CMnBDkF,GAAvB,CNmBA,CMrByB,CAEO,ANmBD;AMlBlC,ANmBO3F,AIYP,KAJD,GJRQA,GAAG,AIYJ,CJZKmB,GIYD0C,QJZH,CIYY,CAACE,CJZKtD,KAAlB,YIYD,EAAkC;AE9B5C,ANmBQ,AIYDoD,MAAAA,SAAS,CAACE,kBAAV;AJXH,AIYA,KJhBD,CAKA;AALA,SAMK;AACDhD,AIUJ8C,IAAAA,IJVI9C,KIUK,CJVC,AIUAsE,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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["/**\n * 给dom渲染属性\n */\nexport function setAttribute(dom, name, value) {\n    // className => class\n    if (name === 'className') name = 'class'\n\n    // 事件 onXXX\n    if (/on\\w+/.test(name)) {\n        name = name.toLowerCase();\n        dom[name] = value || '';\n    }\n    // style \n    else if (name === 'style') {\n        if (!value || typeof value === 'string') {\n            dom.style.cssText = value || '';\n        } else if (value && typeof value === 'object') {\n            for (let name in value) {\n                // 可以通过style={ width: 20 }这种形式来设置样式，可以省略掉单位px\n                dom.style[name] = typeof value[name] === 'number' ? value[name] + 'px' : value[name];\n            }\n        }\n    }\n    // 其他\n    else {\n        if (name in dom) {\n            dom[name] = value || '';\n        }\n        if (value) {\n            dom.setAttribute(name, value);\n        } else {\n            dom.removeAttribute(name);\n        }\n    }\n}","// import { setAttribute, setComponentProps, createComponent } from '../render'\nimport { setAttribute } from './dom'\n\n/**\n * @param {HTMLElement} dom 真实DOM\n * @param {vnode} vnode 虚拟DOM\n * @param {HTMLElement} container 容器\n * @returns {HTMLElement} 更新后的DOM\n */\nexport function diff(dom, vnode, container) {\n    const ret = diffNode(dom, vnode);\n    if (container && ret.parentNode !== container) {\n        container.appendChild(ret);\n    }\n    return ret;\n}\n\n/**\n * \n * @param {HTMLElement} dom 真实DOM\n * @param {*} vnode 虚拟DOM\n * @returns {HTMLElement} 更新后的DOM\n */\nexport function diffNode(dom, vnode) {\n    let newDom = dom;\n    if (vnode === undefined || vnode === null || typeof vnode === 'boolean') vnode = '';\n    if (typeof vnode === 'number') vnode = String(vnode);\n\n    // vnode 是文本的情况\n    if (typeof vnode === 'string') {\n        // 如果 dom 也是文本\n        if (dom && dom.nodeType === 3) {\n            if (dom.textContent !== vnode) {\n                dom.textContent = vnode;\n            }\n        }\n        // 如果 dom 不是文本，说明前后不一致，直接进行替换\n        else {\n            newDom = document.createTextNode(vnode);\n            if (dom && dom.parentNode) {\n                dom.parentNode.replaceChild(parentNode);\n            }\n        }\n        return newDom;\n    }\n\n    // vnode 是组件的情况\n    if (typeof vnode.tag === 'function') {\n        return diffComponent(dom, vnode);\n    }\n\n    // 如果原来的 dom 不存在 或者两者标签节点类型不一样时\n    if (!dom || !isSameNodeType(dom, vnode)) {\n        newDom = document.createElement(vnode.tag);\n        if (dom) {\n            [...dom.childNodes].map(newDom.appendChild);    // 将原来的子节点移到新节点下\n\n            if (dom.parentNode) {\n                dom.parentNode.replaceChild(newDom, dom);    // 移除掉原来的DOM对象\n            }\n        }\n    }\n\n    // 进行 child 的对比\n    if (vnode.children && vnode.children.length > 0 || (newDom.childNodes && newDom.childNodes.length > 0)) {\n        diffChildren(newDom, vnode.children);\n    }\n\n    // 进行属性的对比\n    diffAttributes(newDom, vnode);\n\n    return newDom;\n}\n\n/**\n * \n * @param {HTMLElement} dom 真实DOM\n * @param {Array} vchildren 虚拟 dom 的 children\n */\nfunction diffChildren(dom, vchildren) {\n    const domChildren = dom.childNodes;\n    const children = [];// 存放没有key标记的 old child\n    const keyed = {}; // 进行标记 key: child \n\n    // 将有key的节点和没有key的节点分开\n    if (domChildren.length > 0) {\n        for (let i = 0; i < domChildren.length; i++) {\n            const child = domChildren[i];\n            const key = child.key;\n            if (key) {\n                keyed[key] = child;\n            } else {\n                children.push(child);\n            }\n        }\n    }\n\n    if (vchildren && vchildren.length > 0) {\n        let min = 0;\n        let childrenLen = children.length;\n        for (let i = 0; i < vchildren.length; i++) {\n            const vchild = vchildren[i];\n            const key = vchild.key;\n            let child; // 输出的child\n\n            // 如果当前child有key去匹配\n            if (key) {\n                if (keyed[key]) {\n                    child = keyed[key];\n                    keyed[key] = undefined;\n                }\n            }\n            // 如果没有key标记，则优先找类型相同的节点\n            else if (min < childrenLen) {\n                for (let j = min; j < childrenLen; j++) {\n                    let c = children[j];\n                    if (c && isSameNodeType(c, vchild)) {\n                        child = c;\n                        children[j] = undefined;\n                        if (j === childrenLen - 1) childrenLen--;\n                        if (j === min) min++;\n                        break;\n                    }\n                }\n            }\n            // 对比DOM\n            child = diff(child, vchild);\n\n            // 更新DOM\n            const f = domChildren[i];\n            if (child && child !== dom && child !== f) {\n                // 如果更新前的对应位置为空，说明此节点是新增的\n                if (!f) {\n                    dom.appendChild(child);\n                }\n                // 如果更新后的节点和更新前对应位置的下一个节点一样，说明当前位置的节点被移除了\n                else if (child === f.nextSibling) {\n                    removeNode(f);\n                }\n                // 将更新后的节点移动到正确的位置\n                else {\n                    // 注意insertBefore的用法，第一个参数是要插入的节点，第二个参数是已存在的节点\n                    dom.insertBefore(child, f);\n                }\n            }\n\n        }\n    }\n\n}\n\n/**\n * 组件对比\n * @param {HTMLElement} dom 真实DOM\n * @param {Array} vchildren 虚拟 dom 的 children\n */\nfunction diffComponent(dom, vnode) {\n    let c = dom && dom._component;\n    let oldDom = dom;\n    // 如果组件类型没有变化，则重新set props\n    if (c && c.constructor === vnode.tag) {\n        setComponentProps(c, vnode.attrs);\n        dom = c.base;\n    }\n    // 如果组件类型变化，则移除掉原来组件，并渲染新的组件\n    else {\n        if (c) {\n            unmountComponent(c);\n            oldDom = null;\n        }\n        c = createComponent(vnode.tag, vnode.attrs);\n        setComponentProps(c, vnode.attrs);\n        dom = c.base;\n        if (oldDom && dom !== oldDom) {\n            oldDom._component = null;\n            removeNode(oldDom);\n        }\n    }\n    return dom\n}\n\n/**\n * 对节点进行属性进行diff判断\n * @param {HTMLElement} dom 真实DOM\n * @param {*} vnode 虚拟DOM\n */\nfunction diffAttributes(dom, vnode) {\n    let oldAttrs = {};\n    const newAttrs = vnode.attrs;\n\n    for (let i = 0; i < dom.attributes.length; i++) {\n        const attr = dom.attributes[i];\n        oldAttrs[attr.name] = attr.value;\n    }\n\n    for (let name in oldAttrs) {\n        // 如果原来的属性不在新的里面了，则将属性值设置为 undefined，将其移除掉\n        if (!(name in newAttrs)) {\n            setAttribute(dom, name, undefined);\n        }\n    }\n\n    // 更新 dom 的所有值变化的属性\n    for (let name in newAttrs) {\n        if (oldAttrs[name] !== newAttrs[name]) {\n            setAttribute(dom, name, newAttrs[name]);\n        }\n    }\n}\n\n/**\n * 用来更新 props\n * 生命周期：componentWillMount、componentWillReceiveProps\n */\nexport function setComponentProps(component, props) {\n    if (!component.base) {\n        if (component.componentWillMount) component.componentWillMount();\n    } else if (component.componentWillReceiveProps) {\n        component.componentWillReceiveProps(props);\n    }\n    // component.props = props;\n    renderComponent(component);\n}\n\n/**\n * 渲染组件\n * setState的时候会调用\n * 先 render() 拿到vnode 再 _render() 拿到 dom\n * 生命周期：componentWillUpdate，componentDidUpdate，componentDidMount\n */\nexport function renderComponent(component) {\n\n    let base;\n\n    const renderer = component.render(); // 拿到 vnode\n\n    if (component.base && component.componentWillUpdate) {\n        component.componentWillUpdate();\n    }\n\n    base = diff(component.base, renderer);\n\n    // component.base = base;\n    // base._component = component;\n\n    if (component.base) {\n        if (component.componentDidUpdate) component.componentDidUpdate();\n    } else if (component.componentDidMount) {\n        component.base = base;\n        component.componentDidMount();\n    }\n\n    component.base = base;// 保存组件的 dom 对象\n    base._component = component;// dom 对象对应的组件\n}\n\n/**\n * 实例化组件\n */\nexport function createComponent(component, props) {\n    let inst;\n    // 如果是类定义组件，则直接返回实例,否则 new 一个组件实例\n    if (component.prototype && component.prototype.render) {\n        inst = new component(props);\n        // 如果是函数定义组件，则将其扩展为类定义组件\n    } else {\n        inst = new ReactComponent(props);\n        inst.constructor = component;\n        inst.render = function () {\n            return this.constructor(props);\n        }\n    }\n    return inst;\n}\n\n/**\n * NodeType 对比\n * @param {HTMLElement} dom 真实DOM\n * @param {*} vnode 虚拟DOM\n */\nfunction isSameNodeType(dom, vnode) {\n    if (typeof vnode === 'string' || typeof vnode === 'number') {\n        return dom.nodeType === 3;\n    }\n    if (typeof vnode.tag === 'string') {\n        return dom.nodeName.toLowerCase() === vnode.tag.toLowerCase();\n    }\n    return dom && dom._component && dom._component.constructor === vnode.tag;\n}\n\nfunction unmountComponent(component) {\n    if (component.componentWillUnmount) component.componentWillUnmount();\n    removeNode(component.base);\n}\n\nfunction removeNode(dom) {\n    if (dom && dom.parentNode) {\n        dom.parentNode.removeChild(dom);\n    }\n}\n","import { renderComponent } from '../react-dom/diff'\n/**\n * React.Component\n * 组件的 Component 类\n */\nexport class Component {\n    constructor(props = {}) {\n        // 初始化 state 和 props\n        this.state = {};\n        this.props = props;\n    }\n    // setState 触发视图渲染\n    setState(newData) {\n        Object.assign(this.state, newData)\n        renderComponent(this);\n    }\n}\n\nexport default Component;","import Component from './component.js'\n\n/**\n * React.createElement()\n * transform-react-jsx 是 jsx 转换成 js 的babel 插件\n * 他有一个 pramgma 项，来定义转换 jsx 的方法名称\n * 这里我定义这个函数为 createElement\n */\nfunction createElement(tag, attrs = {}, ...children) {\n    return {\n        tag,\n        attrs,\n        children,\n        // key: attrs.key || null\n    }\n};\n\nexport default createElement;","\nimport Component from './component.js'\nimport createElement from './create-element.js'\n\nexport default {\n    Component,\n    createElement\n}","\nimport { diff } from './diff'\n\n/**\n * \n * vNode有三种结构：\n * 1.原生DOM节点的vnode\n * {\n *     tag: 'div',\n *     attrs: {\n *         className: 'container'\n *     },\n *     children: []\n * }\n * \n * 2.文本节点的vnode\n * \"hello,world\"\n * \n * 3.组件的vnode\n * {\n *     tag: ComponentConstrucotr,\n *     attrs: {\n *         className: 'container'\n *     },\n *     children: []\n * }\n */\nfunction _render(vnode) {\n    if (vnode === undefined || vnode === null || typeof vnode === 'boolean') vnode = '';\n    if (typeof vnode === 'number' || vnode instanceof Date) vnode = String(vnode);\n    // 如果是纯文本\n    if (typeof vnode === 'string') {\n        let textNode = document.createTextNode(vnode);\n        return container.appendChild(textNode);\n    }\n    // 如果 vnode 是组件时的处理,组件的tag是一个构造函数\n    if (typeof vnode.tag === 'function') {\n        // const component = createComponent(vnode.tag, vnode.attrs);\n        // setComponentProps(component, vnode.attrs);\n        // return component.base;\n        const component = vnode;\n        if (component._container) {\n            if (component.componentWillUpdate) {\n                component.componentWillUpdate();\n            }\n        } else if (component.componentWillMount) {\n            component.componentWillMount();\n        }\n        component._container = container;   // 保存父容器信息，用于更新\n        vnode = component.render();\n    }\n    const dom = document.createElement(vnode.tag);\n    // 挂载属性\n    if (vnode.attrs) {\n        Object.keys(vnode.attrs).forEach(key => {\n            const value = vnode.attrs[key];\n            if (key === 'className') key = 'class';\n            // 如果是事件监听函数，则直接附加到dom上\n            if (typeof value === 'function') {\n                dom[key.toLowerCase()] = value;\n            } else {\n                dom.setAttribute(key, vnode.attrs[key]);\n            }\n        });\n    }\n    // 递归子元素\n    vnode.children && vnode.children.forEach(child => _render(child, dom));    // 递归渲染子节点\n    return container.appendChild(dom);\n}\n\n/**\n * React.render()\n * render方法的作用是将虚拟DOM渲染成真实的DOM\n */\nfunction render(vnode, container, dom) {\n    console.log(container, vnode, container);\n    return diff(dom, vnode, container);\n}\n\nexport default render","import render from './render'\n\nexport default {\n    render\n}","import React from './react'\nimport ReactDOM from './react-dom'\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            num: 0\n        }\n    }\n    componentDidMount() {\n        console.log('666')\n        for (let i = 0; i < 10; i++) {\n            this.setState({ num: this.state.num + 1 });\n            console.log(this.state.num);    // 会输出什么？\n        }\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>{this.state.num}</h1>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"]}