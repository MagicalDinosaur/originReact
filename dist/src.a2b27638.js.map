{"version":3,"sources":["src/core/diff.js","src/core/render.js","src/core/index.js","src/index.js"],"names":["diff","dom","vnode","container","ret","diffNode","parentNode","appendChild","newDom","undefined","String","nodeType","textContent","document","createTextNode","replaceChild","tag","diffComponent","isSameNodeType","createElement","childNodes","map","children","length","diffChildren","diffAttributes","oldAttrs","newAttrs","attrs","i","attributes","attr","name","value","vchildren","domChildren","keyed","child","key","push","min","childrenLen","vchild","j","c","f","nextSibling","removeNode","insertBefore","_component","oldDom","constructor","base","unmountComponent","nodeName","toLowerCase","component","componentWillUnmount","removeChild","render","renderComponent","renderer","componentWillUpdate","componentDidUpdate","componentDidMount","_render","Date","textNode","createComponent","setComponentProps","Object","keys","forEach","setAttribute","test","style","cssText","removeAttribute","props","inst","prototype","ReactComponent","componentWillMount","componentWillReceiveProps","React","state","newData","assign","Welcome","trick","element","getElementById","setInterval"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["import { setAttribute, setComponentProps, createComponent } from './render'\n\n/**\n * @param {HTMLElement} dom 真实DOM\n * @param {vnode} vnode 虚拟DOM\n * @param {HTMLElement} container 容器\n * @returns {HTMLElement} 更新后的DOM\n */\nexport function diff(dom, vnode, container) {\n\n    const ret = diffNode(dom, vnode);\n\n    if (container && ret.parentNode !== container) {\n        container.appendChild(ret);\n    }\n\n    return ret;\n\n}\n\n/**\n * \n * @param {HTMLElement} dom 真实DOM\n * @param {*} vnode 虚拟DOM\n * @returns {HTMLElement} 更新后的DOM\n */\nexport function diffNode(dom, vnode) {\n    let newDom = dom;\n    if (vnode === undefined || vnode === null || typeof vnode === 'boolean') vnode = '';\n    if (typeof vnode === 'number') vnode = String(vnode);\n\n    // vnode 是文本的情况\n    if (typeof vnode === 'string') {\n        // 如果 dom 也是文本\n        if (dom && dom.nodeType === 3) {\n            if (dom.textContent !== vnode) {\n                dom.textContent = vnode;\n            }\n        }\n        // 如果 dom 不是文本，说明前后不一致，直接进行替换\n        else {\n            newDom = document.createTextNode(vnode);\n            if (dom && dom.parentNode) {\n                dom.parentNode.replaceChild(parentNode);\n            }\n        }\n        return newDom;\n    }\n\n    // vnode 是组件的情况\n    if (typeof vnode.tag === 'function') {\n        return diffComponent(dom, vnode);\n    }\n\n    // 如果原来的 dom 不存在 或者两者标签节点类型不一样时\n    if (!dom || !isSameNodeType(dom, vnode)) {\n        newDom = document.createElement(vnode.tag);\n        if (dom) {\n            [...dom.childNodes].map(newDom.appendChild);    // 将原来的子节点移到新节点下\n\n            if (dom.parentNode) {\n                dom.parentNode.replaceChild(newDom, dom);    // 移除掉原来的DOM对象\n            }\n        }\n    }\n\n    // 进行 child 的对比\n    if (vnode.children && vnode.children.length > 0 || (newDom.childNodes && newDom.childNodes.length > 0)) {\n        diffChildren(newDom, vnode.children);\n    }\n\n    // 进行属性的对比\n    diffAttributes(newDom, vnode);\n\n    return newDom;\n}\n\n/**\n * 对节点进行属性进行diff判断\n * @param {HTMLElement} dom 真实DOM\n * @param {*} vnode 虚拟DOM\n */\nfunction diffAttributes(dom, vnode) {\n    let oldAttrs = {};\n    const newAttrs = vnode.attrs;\n\n    for (let i = 0; i < dom.attributes.length; i++) {\n        const attr = dom.attributes[i];\n        oldAttrs[attr.name] = attr.value;\n    }\n\n    for (let name in oldAttrs) {\n        // 如果原来的属性不在新的里面了，则将属性值设置为 undefined，将其移除掉\n        if (!(name in newAttrs)) {\n            setAttribute(dom, name, undefined);\n        }\n    }\n\n    // 更新 dom 的所有值变化的属性\n    for (let name in newAttrs) {\n        if (oldAttrs[name] !== newAttrs[name]) {\n            setAttribute(dom, name, newAttrs[name]);\n        }\n    }\n}\n\n/**\n * \n * @param {HTMLElement} dom 真实DOM\n * @param {Array} vchildren 虚拟 dom 的 children\n */\nfunction diffChildren(dom, vchildren) {\n    const domChildren = dom.childNodes;\n    const children = [];// 存放没有key标记的 old child\n    const keyed = {}; // 进行标记 key: child \n\n    // 将有key的节点和没有key的节点分开\n    if (domChildren.length > 0) {\n        for (let i = 0; i < domChildren.length; i++) {\n            const child = domChildren[i];\n            const key = child.key;\n            if (key) {\n                keyed[key] = child;\n            } else {\n                children.push(child);\n            }\n        }\n    }\n\n    if (vchildren && vchildren.length > 0) {\n        let min = 0;\n        let childrenLen = children.length;\n        for (let i = 0; i < vchildren.length; i++) {\n            const vchild = vchildren[i];\n            const key = vchild.key;\n            let child; // 输出的child\n\n            // 如果当前child有key去匹配\n            if (key) {\n                if (keyed[key]) {\n                    child = keyed[key];\n                    keyed[key] = undefined;\n                }\n            }\n            // 如果没有key标记，则优先找类型相同的节点\n            else if (min < childrenLen) {\n                for (let j = min; j < childrenLen; j++) {\n                    let c = children[j];\n                    if (c && isSameNodeType(c, vchild)) {\n                        child = c;\n                        children[j] = undefined;\n                        if (j === childrenLen - 1) childrenLen--;\n                        if (j === min) min++;\n                        break;\n                    }\n                }\n            }\n            // 对比DOM\n            child = diff(child, vchild);\n\n            // 更新DOM\n            const f = domChildren[i];\n            if (child && child !== dom && child !== f) {\n                // 如果更新前的对应位置为空，说明此节点是新增的\n                if (!f) {\n                    dom.appendChild(child);\n                }\n                // 如果更新后的节点和更新前对应位置的下一个节点一样，说明当前位置的节点被移除了\n                else if (child === f.nextSibling) {\n                    removeNode(f);\n                }\n                // 将更新后的节点移动到正确的位置\n                else {\n                    // 注意insertBefore的用法，第一个参数是要插入的节点，第二个参数是已存在的节点\n                    dom.insertBefore(child, f);\n                }\n            }\n\n        }\n    }\n\n}\n\n/**\n * 组件对比\n * @param {HTMLElement} dom 真实DOM\n * @param {Array} vchildren 虚拟 dom 的 children\n */\nfunction diffComponent(dom, vnode) {\n    let c = dom && dom._component;\n    let oldDom = dom;\n    // 如果组件类型没有变化，则重新set props\n    if (c && c.constructor === vnode.tag) {\n        setComponentProps(c, vnode.attrs);\n        dom = c.base;\n    }\n    // 如果组件类型变化，则移除掉原来组件，并渲染新的组件\n    else {\n        if (c) {\n            unmountComponent(c);\n            oldDom = null;\n        }\n        c = createComponent(vnode.tag, vnode.attrs);\n        setComponentProps(c, vnode.attrs);\n        dom = c.base;\n        if (oldDom && dom !== oldDom) {\n            oldDom._component = null;\n            removeNode(oldDom);\n        }\n    }\n    return dom\n}\n\n/**\n * NodeType 对比\n * @param {HTMLElement} dom 真实DOM\n * @param {*} vnode 虚拟DOM\n */\nfunction isSameNodeType(dom, vnode) {\n    if (typeof vnode === 'string' || typeof vnode === 'number') {\n        return dom.nodeType === 3;\n    }\n    if (typeof vnode.tag === 'string') {\n        return dom.nodeName.toLowerCase() === vnode.tag.toLowerCase();\n    }\n    return dom && dom._component && dom._component.constructor === vnode.tag;\n}\n\nfunction unmountComponent(component) {\n    if (component.componentWillUnmount) component.componentWillUnmount();\n    removeNode(component.base);\n}\n\nfunction removeNode(dom) {\n    if (dom && dom.parentNode) {\n        dom.parentNode.removeChild(dom);\n    }\n}","import { diff } from \"./diff\";\n\n/**\n * React.render()\n * render方法的作用是将虚拟DOM渲染成真实的DOM\n */\nexport function render(vnode, container, dom) {\n    // return container.appendChild(_render(vnode));\n    return diff(dom, vnode, container);\n}\n\n/**\n * 渲染组件\n * 先 render() 拿到vnode 再 _render() 拿到 dom\n * 生命周期：componentWillUpdate，componentDidUpdate，componentDidMount\n */\nexport function renderComponent(component) {\n    let base;\n    const renderer = component.render(); // 拿到 vnode\n    if (component.base && component.componentWillUpdate) {\n        component.componentWillUpdate();\n    }\n    // base = _render(renderer); // 拿到 dom 对象\n    base = diff(component.base, renderer)\n    if (component.base) {\n        if (component.componentDidUpdate) component.componentDidUpdate();\n    } else if (component.componentDidMount) {\n        component.componentDidMount();\n    }\n    // if (component.base && component.base.parentNode) {\n    //     component.base.parentNode.replaceChild(base, component.base);\n    // }\n    component.base = base;// 保存组件的 dom 对象\n    base._component = component;// dom 对象对应的组件\n}\n\n/**\n * \n * vNode有三种结构：\n * 1.原生DOM节点的vnode\n * {\n *     tag: 'div',\n *     attrs: {\n *         className: 'container'\n *     },\n *     children: []\n * }\n * \n * 2.文本节点的vnode\n * \"hello,world\"\n * \n * 3.组件的vnode\n * {\n *     tag: ComponentConstrucotr,\n *     attrs: {\n *         className: 'container'\n *     },\n *     children: []\n * }\n */\nfunction _render(vnode) {\n    if (vnode === undefined || vnode === null || typeof vnode === 'boolean') vnode = '';\n    if (typeof vnode === 'number' || vnode instanceof Date) vnode = String(vnode);\n    // 如果是纯文本\n    if (typeof vnode === 'string') {\n        let textNode = document.createTextNode(vnode);\n        return textNode;\n    }\n    // 如果 vnode 是组件时的处理,组件的tag是一个构造函数\n    if (typeof vnode.tag === 'function') {\n        const component = createComponent(vnode.tag, vnode.attrs);\n        setComponentProps(component, vnode.attrs);\n        return component.base;\n    }\n    const dom = document.createElement(vnode.tag);\n    // 挂载属性\n    if (vnode.attrs) {\n        Object.keys(vnode.attrs).forEach(key => {\n            const value = vnode.attrs[key];\n            setAttribute(dom, key, value);\n        });\n    }\n    // 递归子元素\n    vnode.children && vnode.children.forEach(child => render(child, dom));    // 递归渲染子节点\n    return dom;\n}\n\n/**\n * 给dom渲染属性\n */\nexport function setAttribute(dom, name, value) {\n    // className => class\n    if (name === 'className') name = 'class'\n\n    // 事件 onXXX\n    if (/on\\w+/.test(name)) {\n        name = name.toLowerCase();\n        dom[name] = value || '';\n    }\n    // style \n    else if (name === 'style') {\n        if (!value || typeof value === 'string') {\n            dom.style.cssText = value || '';\n        } else if (value && typeof value === 'object') {\n            for (let name in value) {\n                // 可以通过style={ width: 20 }这种形式来设置样式，可以省略掉单位px\n                dom.style[name] = typeof value[name] === 'number' ? value[name] + 'px' : value[name];\n            }\n        }\n    }\n    // 其他\n    else {\n        if (name in dom) {\n            dom[name] = value || '';\n        }\n        if (value) {\n            dom.setAttribute(name, value);\n        } else {\n            dom.removeAttribute(name);\n        }\n    }\n}\n\n/**\n * 实例化组件\n */\nfunction createComponent(component, props) {\n    let inst;\n    // 如果是类定义组件，则直接返回实例,否则 new 一个组件实例\n    if (component.prototype && component.prototype.render) {\n        inst = new component(props);\n        // 如果是函数定义组件，则将其扩展为类定义组件\n    } else {\n        inst = new ReactComponent(props);\n        inst.constructor = component;\n        inst.render = function () {\n            return this.constructor(props);\n        }\n    }\n    return inst;\n}\n\n/**\n * 用来更新 props\n * 生命周期：componentWillMount、componentWillReceiveProps\n */\nexport function setComponentProps(component, props) {\n    if (!component.base) {\n        if (component.componentWillMount) component.componentWillMount();\n    } else if (component.componentWillReceiveProps) {\n        component.componentWillReceiveProps(props);\n    }\n    // component.props = props;\n    renderComponent(component);\n}","/**\n * from:https://github.com/hujiulong/simple-react/blob/chapter-1/src/index.js\n */\nimport { render, renderComponent } from './render';\n\nconst React = {\n    createElement,\n    render\n};\n\n/**\n * React.createElement()\n * transform-react-jsx 是 jsx 转换成 js 的babel 插件\n * 他有一个 pramgma 项，来定义转换 jsx 的方法名称\n * 这里我定义这个函数为 createElement\n */\nfunction createElement(tag, attrs, ...children) {\n    return {\n        tag,\n        attrs,\n        children\n    }\n};\n\n/**\n * React.Component\n * 组件的 Component 类\n */\nexport class ReactComponent {\n    constructor(props = {}) {\n        // 初始化 state 和 props\n        this.state = {};\n        this.props = props;\n    }\n    // setState 触发视图渲染\n    setState(newData) {\n        Object.assign(this.state, newData)\n        renderComponent(this);\n    }\n}\n\nexport default React","import React, { ReactComponent } from './core'\n\nclass Welcome extends ReactComponent {\n    render() {\n        return <h4>Hello, {this.props.name}</h4>;\n    }\n}\n\nfunction trick() {\n    const element = (\n        <div>\n            <Welcome name=\"666\"></Welcome>\n            <h1 className=\"title\" data-item=\"1\">Hello World!</h1>\n            <h6 style=\"color:red;\">{new Date()}</h6>\n        </div>\n    )\n    React.render(element, document.getElementById('root'))\n}\n\nsetInterval(trick, 1000);\n// trick()\n\n"]}